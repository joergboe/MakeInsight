# General rule execution:
#
# see: https://www.gnu.org/software/make/manual/make.html#Rule-Introduction
#
# A simple makefile consists of “rules” with the following shape:
# target … : prerequisites …
#	recipe
#	…
#	…
# A target is usually the name of a file that is generated by a program; examples of targets are executable or object files.
# A target can also be the name of an action to carry out, such as ‘clean’ (see Phony Targets).
#
# A prerequisite is a file that is used as input to create the target. A target often depends on several files.
#
# A recipe is an action that make carries out. A recipe may have more than one command, either on the same line or each on its own line.
# Please note: you need to put a tab character at the beginning of every recipe line! This is an obscurity that catches the unwary.
# If you prefer to prefix your recipes with a character other than tab, you can set the .RECIPEPREFIX variable to an alternate character (see Other Special Variables).
#
# Usually a recipe is in a rule with prerequisites and serves to create a target file if any of the prerequisites change.
# However, the rule that specifies a recipe for the target need not have prerequisites. For example,
# the rule containing the delete command associated with the target ‘clean’ does not have prerequisites.
#
# A makefile may contain other text besides rules, but a simple makefile need only contain rules.
# Rules may look somewhat more complicated than shown in this template, but all fit the pattern more or less.

# Example:
# The file target 'result' depends on files 'f1', 'f2',  and 'f3' and is the concatenation of these files.
# The files 'f1' .. 'f3' must exist.
#
# The action target 'clean' cleans up the generated files of a previous make run. The file 'clean' must not exist.


# Usage: for x in 1 2 3; do echo "Text number $x" > f$x; done
#        rm -f clean
#        make -f 40_rules.mk #-> rule 'result runs'
#        make -f 40_rules.mk #-> no rule runs since 'result' is up to date
#        echo "New text number 2" > f2
#        make -f 40_rules.mk #-> rule 'result runs'
#
# Cleanup: make -f 45_rules.mk clean

result: f1 f2 f3
	@echo "---- run rule 'result' ----"
	@cat f1 f2 f3 > result
	cat result

clean:
	@rm -fv result
